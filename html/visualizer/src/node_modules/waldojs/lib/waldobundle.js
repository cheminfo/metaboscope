/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _createClass = __webpack_require__(1)['default'];

	var _classCallCheck = __webpack_require__(5)['default'];

	var _Object$assign = __webpack_require__(6)['default'];

	var _interopRequireDefault = __webpack_require__(18)['default'];

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _justCompare = __webpack_require__(19);

	var _justCompare2 = _interopRequireDefault(_justCompare);

	var GLOBAL = typeof window == 'object' ? window : global;

	var find = {
	  byName: function byName(what, where) {
	    return this.searchMaybe('propName', 'string', what, where);
	  },
	  byType: function byType(what, where) {
	    return this.searchMaybe('type', 'function', what, where);
	  },
	  byValue: function byValue(what, where) {
	    return this.searchMaybe('value', null, what, where);
	  },
	  byValueCoerced: function byValueCoerced(what, where) {
	    return this.searchMaybe('valueCoerced', null, what, where);
	  },
	  custom: function custom(fn, where) {
	    return this.searchMaybe(fn, null, null, where);
	  },
	  searchMaybe: function searchMaybe(util, expected, what, where) {
	    // integrity check arguments
	    if (expected && typeof what != expected) {
	      throw new Error(what + ' must be ' + expected);
	    }
	    // only console.log if we are the global function
	    if (this === GLOBAL.waldo) {
	      GLOBAL.DEBUG = true;
	    }
	    return search(util, what, where);
	  }
	};

	function search(util, what) {
	  var where = arguments.length <= 2 || arguments[2] === undefined ? GLOBAL : arguments[2];

	  util = searchBy[util] || util;

	  var data = undefined;
	  var alreadySeen = undefined;

	  var path = where == GLOBAL ? 'GLOBAL' : 'SRC';
	  var queue = [{ where: where, path: path }];
	  var seen = [];

	  var matches = [];
	  matches.log = function () {
	    this.forEach(function (m) {
	      return m.log();
	    });
	  };

	  // a non-recursive solution to avoid call stack limits
	  // http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4
	  while (data = queue.pop()) {
	    var _data = data;
	    var _where = _data.where;
	    var _path = _data.path;

	    for (var prop in _where) {
	      // IE may throw errors when accessing/coercing some properties
	      try {
	        if (_where.hasOwnProperty(prop)) {
	          // inspect objects
	          if ([_where[prop]] == '[object Object]') {
	            // check if already searched (prevents circular references)
	            for (var i = -1; seen[++i] && !(alreadySeen = (0, _justCompare2['default'])(seen[i].where, _where[prop]) && seen[i]););
	            // add to stack
	            if (!alreadySeen) {
	              data = { where: _where[prop], path: _path + '.' + prop };
	              queue.push(data);
	              seen.push(data);
	            }
	          }
	          // if match detected, push it.
	          if (util(what, _where, prop)) {
	            var type = alreadySeen ? '<' + alreadySeen.path + '>' : typeof _where[prop];
	            var match = new Match({ path: _path + '.' + prop, obj: _where, prop: prop, type: type });
	            matches.push(match);
	            GLOBAL.DEBUG && match.log();
	          }
	        }
	      } catch (e) {}
	    }
	  }

	  return matches;
	}

	var searchBy = {
	  propName: function propName(what, where, prop) {
	    return what == prop;
	  },
	  type: function type(what, where, prop) {
	    return where[prop] instanceof what;
	  },
	  value: function value(what, where, prop) {
	    return where[prop] === what;
	  },
	  valueCoerced: function valueCoerced(what, where, prop) {
	    return where[prop] == what;
	  }
	};

	var Match = (function () {
	  function Match(props) {
	    _classCallCheck(this, Match);

	    _Object$assign(this, props);
	    this.value = this.obj[this.prop];
	  }

	  // for console running

	  _createClass(Match, [{
	    key: 'toString',
	    value: function toString() {
	      var path = this.path;
	      var type = this.type;

	      return path + ' -> (' + type + ') ' + this.logValue();
	    }
	  }, {
	    key: 'logValue',
	    value: function logValue() {
	      var val = this.value;
	      // if value is an object then just toString it
	      var isPrimitive = function isPrimitive(x) {
	        return Object(x) !== x;
	      };
	      return isPrimitive(val) || Array.isArray(val) ? val : ({}).toString.call(val);
	    }
	  }, {
	    key: 'log',
	    value: function log() {
	      console.log(this.toString());
	    }
	  }]);

	  return Match;
	})();

	GLOBAL.waldo = _Object$assign({}, find, { debug: true });

	exports['default'] = find;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _Object$defineProperty = __webpack_require__(2)["default"];

	exports["default"] = (function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;

	      _Object$defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	})();

	exports.__esModule = true;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(3), __esModule: true };

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(4);
	module.exports = function defineProperty(it, key, desc){
	  return $.setDesc(it, key, desc);
	};

/***/ },
/* 4 */
/***/ function(module, exports) {

	var $Object = Object;
	module.exports = {
	  create:     $Object.create,
	  getProto:   $Object.getPrototypeOf,
	  isEnum:     {}.propertyIsEnumerable,
	  getDesc:    $Object.getOwnPropertyDescriptor,
	  setDesc:    $Object.defineProperty,
	  setDescs:   $Object.defineProperties,
	  getKeys:    $Object.keys,
	  getNames:   $Object.getOwnPropertyNames,
	  getSymbols: $Object.getOwnPropertySymbols,
	  each:       [].forEach
	};

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	exports["default"] = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	exports.__esModule = true;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(7), __esModule: true };

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(8);
	module.exports = __webpack_require__(11).Object.assign;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $def = __webpack_require__(9);

	$def($def.S + $def.F, 'Object', {assign: __webpack_require__(12)});

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(10)
	  , core      = __webpack_require__(11)
	  , PROTOTYPE = 'prototype';
	var ctx = function(fn, that){
	  return function(){
	    return fn.apply(that, arguments);
	  };
	};
	var $def = function(type, name, source){
	  var key, own, out, exp
	    , isGlobal = type & $def.G
	    , isProto  = type & $def.P
	    , target   = isGlobal ? global : type & $def.S
	        ? global[name] : (global[name] || {})[PROTOTYPE]
	    , exports  = isGlobal ? core : core[name] || (core[name] = {});
	  if(isGlobal)source = name;
	  for(key in source){
	    // contains in native
	    own = !(type & $def.F) && target && key in target;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    if(isGlobal && typeof target[key] != 'function')exp = source[key];
	    // bind timers to global for call from export context
	    else if(type & $def.B && own)exp = ctx(out, global);
	    // wrap global constructors for prevent change them in library
	    else if(type & $def.W && target[key] == out)!function(C){
	      exp = function(param){
	        return this instanceof C ? new C(param) : C(param);
	      };
	      exp[PROTOTYPE] = C[PROTOTYPE];
	    }(out);
	    else exp = isProto && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export
	    exports[key] = exp;
	    if(isProto)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
	  }
	};
	// type bitmap
	$def.F = 1;  // forced
	$def.G = 2;  // global
	$def.S = 4;  // static
	$def.P = 8;  // proto
	$def.B = 16; // bind
	$def.W = 32; // wrap
	module.exports = $def;

/***/ },
/* 10 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 11 */
/***/ function(module, exports) {

	var core = module.exports = {version: '1.2.3'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.1 Object.assign(target, source, ...)
	var $        = __webpack_require__(4)
	  , toObject = __webpack_require__(13)
	  , IObject  = __webpack_require__(15);

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = __webpack_require__(17)(function(){
	  var a = Object.assign
	    , A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , $$    = arguments
	    , $$len = $$.length
	    , index = 1
	    , getKeys    = $.getKeys
	    , getSymbols = $.getSymbols
	    , isEnum     = $.isEnum;
	  while($$len > index){
	    var S      = IObject($$[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  }
	  return T;
	} : Object.assign;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(14);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 14 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(16);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 16 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 18 */
/***/ function(module, exports) {

	"use strict";

	exports["default"] = function (obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	};

	exports.__esModule = true;

/***/ },
/* 19 */
/***/ function(module, exports) {

	module.exports = compare;

	/*
	  primitives: value1 === value2
	  functions: value1.toString == value2.toString
	  arrays: if length, sequence and values of properties are identical
	  objects: if length, names and values of properties are identical
	  compare([[1, [2, 3]], [[1, [2, 3]]); // true
	  compare([[1, [2, 3], 4], [[1, [2, 3]]); // false
	  compare({a: 2, b: 3}, {a: 2, b: 3}); // true
	  compare({a: 2, b: 3}, {b: 3, a: 2}); // true
	  compare({a: 2, b: 3, c: 4}, {a: 2, b: 3}); // false
	  compare({a: 2, b: 3}, {a: 2, b: 3, c: 4}); // false
	  compare([[1, [2, {a: 4}], 4], [[1, [2, {a: 4}]]); // true
	*/

	function compare(value1, value2) {
	  if (value1 === value2) {
	    return true;
	  }
	  if (typeof value1 != typeof value2) {
	    return false;
	  }
	  if (value1 !== Object(value1)) {
	    // non equal primitives
	    return false;
	  }
	  if (!value1) {
	    return false;
	  }
	  if (Array.isArray(value1)) {
	    return compareArrays(value1, value2);
	  }
	  if (({}).toString.call(value1) == '[object Object]') {
	    return compareObjects(value1, value2);
	  } else {
	    return compareNativeSubtypes(value1, value2);
	  }
	}

	function compareNativeSubtypes(value1, value2) {
	  // e.g. Function, RegExp, Date
	  return value1.toString() === value2.toString();
	}

	function compareArrays(value1, value2) {
	  var len = value1.length;
	  if (len != value2.length) {
	    return false;
	  }
	  var alike = true;
	  for (var i = 0; i < len; i++) {
	    if (!compare(value1[i], value2[i])) {
	      alike = false;
	      break;
	    }
	  }
	  return alike;
	}

	function compareObjects(value1, value2) {
	  var keys1 = Object.keys(value1).sort();
	  var keys2 = Object.keys(value2).sort();
	  var len = keys1.length;
	  if (len != keys2.length) {
	    return false;
	  }
	  for (var i = 0; i < len; i++) {
	    var key1 = keys1[i];
	    var key2 = keys2[i];
	    if (!((key1 == key2) && (compare(value1[key1], value2[key2])))) {
	      return false;
	    }
	  }
	  return true;
	}


/***/ }
/******/ ]);